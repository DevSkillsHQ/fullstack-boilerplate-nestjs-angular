{"ast":null,"code":"import _asyncToGenerator from \"/root/projects/fullstack-boilerplate-nestjs-angular/app-frontend/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../transactions.service\";\nimport * as i2 from \"@angular/forms\";\nexport class CreateTransactionComponent {\n  constructor(tService) {\n    this.balance = 0;\n    this.tService = tService;\n  }\n\n  allowOnlyNumbersAndMinus(event) {\n    console.log(event);\n    const charCode = event.which ? event.which : event.keyCode;\n\n    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 45) {\n      return false;\n    }\n\n    return true;\n  }\n\n  onSubmit(form) {\n    var _this = this;\n\n    return _asyncToGenerator(function* () {\n      _this.tService.postTransaction(form.value.account_id, form.value.amount);\n\n      const balance = yield _this.tService.fetchBalance(form.value.account_id);\n\n      _this.tService.addTransaction(form.value.account_id, form.value.amount, balance);\n\n      form.reset();\n    })();\n  }\n\n}\n\nCreateTransactionComponent.ɵfac = function CreateTransactionComponent_Factory(t) {\n  return new (t || CreateTransactionComponent)(i0.ɵɵdirectiveInject(i1.TransactionsService));\n};\n\nCreateTransactionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: CreateTransactionComponent,\n  selectors: [[\"app-create-transaction\"]],\n  decls: 17,\n  vars: 1,\n  consts: [[1, \"nav\", \"nav-tabs\"], [1, \"nav-item\"], [\"aria-current\", \"page\", 1, \"nav-link\", \"active\", 2, \"cursor\", \"pointer\"], [3, \"ngSubmit\"], [\"form\", \"ngForm\"], [1, \"form-group\"], [\"for\", \"account_id\"], [\"type\", \"text\", \"id\", \"account_id\", \"name\", \"account_id\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"keypress\"], [\"for\", \"amount\"], [\"type\", \"text\", \"id\", \"amount\", \"name\", \"amount\", \"ngModel\", \"\", \"required\", \"\", 1, \"form-control\", 3, \"keypress\"], [\"type\", \"submit\", 1, \"btn\", \"btn-primary\", 3, \"disabled\"]],\n  template: function CreateTransactionComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      const _r1 = i0.ɵɵgetCurrentView();\n\n      i0.ɵɵelementStart(0, \"div\")(1, \"ul\", 0)(2, \"li\", 1)(3, \"a\", 2);\n      i0.ɵɵtext(4, \"Submit new transaction\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"form\", 3, 4);\n      i0.ɵɵlistener(\"ngSubmit\", function CreateTransactionComponent_Template_form_ngSubmit_5_listener() {\n        i0.ɵɵrestoreView(_r1);\n\n        const _r0 = i0.ɵɵreference(6);\n\n        return i0.ɵɵresetView(ctx.onSubmit(_r0));\n      });\n      i0.ɵɵelementStart(7, \"div\", 5)(8, \"label\", 6);\n      i0.ɵɵtext(9, \"Account ID:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(10, \"input\", 7);\n      i0.ɵɵlistener(\"keypress\", function CreateTransactionComponent_Template_input_keypress_10_listener($event) {\n        return ctx.allowOnlyNumbersAndMinus($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(11, \"div\", 5)(12, \"label\", 8);\n      i0.ɵɵtext(13, \"Amount:\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"input\", 9);\n      i0.ɵɵlistener(\"keypress\", function CreateTransactionComponent_Template_input_keypress_14_listener($event) {\n        return ctx.allowOnlyNumbersAndMinus($event);\n      });\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"button\", 10);\n      i0.ɵɵtext(16, \" Submit \");\n      i0.ɵɵelementEnd()()();\n    }\n\n    if (rf & 2) {\n      const _r0 = i0.ɵɵreference(6);\n\n      i0.ɵɵadvance(15);\n      i0.ɵɵproperty(\"disabled\", _r0.invalid);\n    }\n  },\n  dependencies: [i2.ɵNgNoValidate, i2.DefaultValueAccessor, i2.NgControlStatus, i2.NgControlStatusGroup, i2.RequiredValidator, i2.NgModel, i2.NgForm],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJjcmVhdGUtdHJhbnNhY3Rpb24uY29tcG9uZW50LmNzcyJ9 */\"]\n});","map":{"version":3,"mappings":";;;;AASA,OAAM,MAAOA,0BAAP,CAAiC;EAGrCC,YAAYC,QAAZ,EAAyC;IADzC,eAAkB,CAAlB;IAEE,KAAKA,QAAL,GAAgBA,QAAhB;EACD;;EAEDC,wBAAwB,CAACC,KAAD,EAAqB;IAC3CC,OAAO,CAACC,GAAR,CAAYF,KAAZ;IAEA,MAAMG,QAAQ,GAAGH,KAAK,CAACI,KAAN,GAAcJ,KAAK,CAACI,KAApB,GAA4BJ,KAAK,CAACK,OAAnD;;IACA,IAAIF,QAAQ,GAAG,EAAX,KAAkBA,QAAQ,GAAG,EAAX,IAAiBA,QAAQ,GAAG,EAA9C,KAAqDA,QAAQ,KAAK,EAAtE,EAA0E;MACxE,OAAO,KAAP;IACD;;IACD,OAAO,IAAP;EACD;;EACKG,QAAQ,CAACC,IAAD,EAAa;IAAA;;IAAA;MACzB,KAAI,CAACT,QAAL,CAAcU,eAAd,CAA8BD,IAAI,CAACE,KAAL,CAAWC,UAAzC,EAAqDH,IAAI,CAACE,KAAL,CAAWE,MAAhE;;MACA,MAAMC,OAAO,SAAS,KAAI,CAACd,QAAL,CAAce,YAAd,CAA2BN,IAAI,CAACE,KAAL,CAAWC,UAAtC,CAAtB;;MACA,KAAI,CAACZ,QAAL,CAAcgB,cAAd,CACEP,IAAI,CAACE,KAAL,CAAWC,UADb,EAEEH,IAAI,CAACE,KAAL,CAAWE,MAFb,EAGEC,OAHF;;MAKAL,IAAI,CAACQ,KAAL;IARyB;EAS1B;;AAzBoC;;;mBAA1BnB,4BAA0BoB;AAAA;;;QAA1BpB;EAA0BqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;;;MCTvCL,4BAAK,CAAL,EAAK,IAAL,EAAK,CAAL,EAAK,CAAL,EAAK,IAAL,EAAK,CAAL,EAAK,CAAL,EAAK,GAAL,EAAK,CAAL;MAISA;MAAsBA;MAI7BA;MAAMA;QAAAA;;QAAA;;QAAA,OAAYA,iCAAZ;MAA0B,CAA1B;MACJA,+BAAwB,CAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MAC0BA;MAAWA;MACnCA;MACEA;QAAA,OAAYM,oCAAZ;MAA4C,CAA5C;MADFN;MAUFA,gCAAwB,EAAxB,EAAwB,OAAxB,EAAwB,CAAxB;MACsBA;MAAOA;MAC3BA;MACEA;QAAA,OAAYM,oCAAZ;MAA4C,CAA5C;MADFN;MAUFA;MACEA;MACFA;;;;;;MAF8CA;MAAAA","names":["CreateTransactionComponent","constructor","tService","allowOnlyNumbersAndMinus","event","console","log","charCode","which","keyCode","onSubmit","form","postTransaction","value","account_id","amount","balance","fetchBalance","addTransaction","reset","i0","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["/root/projects/fullstack-boilerplate-nestjs-angular/app-frontend/src/app/create-transaction/create-transaction.component.ts","/root/projects/fullstack-boilerplate-nestjs-angular/app-frontend/src/app/create-transaction/create-transaction.component.html"],"sourcesContent":["import { Component } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { TransactionsService } from '../transactions.service';\n\n@Component({\n  selector: 'app-create-transaction',\n  templateUrl: './create-transaction.component.html',\n  styleUrls: ['./create-transaction.component.css'],\n})\nexport class CreateTransactionComponent {\n  tService: TransactionsService;\n  balance: number = 0;\n  constructor(tService: TransactionsService) {\n    this.tService = tService;\n  }\n\n  allowOnlyNumbersAndMinus(event: KeyboardEvent): boolean {\n    console.log(event);\n\n    const charCode = event.which ? event.which : event.keyCode;\n    if (charCode > 31 && (charCode < 48 || charCode > 57) && charCode !== 45) {\n      return false;\n    }\n    return true;\n  }\n  async onSubmit(form: NgForm) {\n    this.tService.postTransaction(form.value.account_id, form.value.amount);\n    const balance = await this.tService.fetchBalance(form.value.account_id);\n    this.tService.addTransaction(\n      form.value.account_id,\n      form.value.amount,\n      balance!\n    );\n    form.reset();\n  }\n}\n","<div>\n  <ul class=\"nav nav-tabs\">\n    <li class=\"nav-item\">\n      <a class=\"nav-link active\" aria-current=\"page\" style=\"cursor: pointer\"\n        >Submit new transaction</a\n      >\n    </li>\n  </ul>\n  <form (ngSubmit)=\"onSubmit(form)\" #form=\"ngForm\">\n    <div class=\"form-group\">\n      <label for=\"account_id\">Account ID:</label>\n      <input\n        (keypress)=\"allowOnlyNumbersAndMinus($event)\"\n        type=\"text\"\n        id=\"account_id\"\n        name=\"account_id\"\n        class=\"form-control\"\n        ngModel\n        required\n      />\n    </div>\n    <div class=\"form-group\">\n      <label for=\"amount\">Amount:</label>\n      <input\n        (keypress)=\"allowOnlyNumbersAndMinus($event)\"\n        type=\"text\"\n        id=\"amount\"\n        name=\"amount\"\n        class=\"form-control\"\n        ngModel\n        required\n      />\n    </div>\n    <button class=\"btn btn-primary\" type=\"submit\" [disabled]=\"form.invalid\">\n      Submit\n    </button>\n  </form>\n</div>\n"]},"metadata":{},"sourceType":"module"}